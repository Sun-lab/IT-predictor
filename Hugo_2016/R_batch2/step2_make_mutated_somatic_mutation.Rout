
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #------------------------------------------------------
> # Create somatic mutation chains 
> # 1. Import data
> # 2. Replace mutated AA and Extract somatic mutations for 9 and 15 peptide  
> #    length, includes replacing * with X in stop codon
> # 3. save hugo_mutdata3_sm.RData
> #------------------------------------------------------
> 
> #--------------------------------------------------------------------
> # Step 1: Import Data 
> #--------------------------------------------------------------------
> #input dataset with the reference seq
> 
> load("hugo_mutdata3_refaa.RData")
> dim(hugo_mutdata3_refaa)
[1] 34475    16
> hugo_mutdata3_refaa[1,]
   id seqnames  start    end REF ALT tumor_name normal_name W pos M Wseq seqpos
1 Pt1     chr1 957229 957229   C   A SRR3083837  SRR3083838 R  75 L    G    224
  Mseq      EnsembleID
1    T ENST00000327044
prot.seq
1 MAAAGSRKRRLAELTVDEFLASGFDSESESESENSPQAETREAREAARSPDKPGGSPSASRRKGRASEHKDQLSRLKDRDPEFYKFLQENDQSLLNFSDSDSSEEEEGPFHSLPDVLEEASEEEDGAEEGEDGDRVPRGLKGKKNSVPVTVAMVERWKQAAKQRLTPKLFHEVVQAFRAAVATTRGDQESAEANKFQVTDSAAFNALVTFCIRDLIGCLQKLLFGKVAKDSSRMLQPSSSPLWGKLRVDIKAYLGSAIQLVSCLSETTVLAAVLRHISVLVPCFLTFPKQCRMLLKRMVIVWSTGEESLRVLAFLVLSRVCRHKKDTFLGPVLKQMYITYVRNCKFTSPGALPFISFMQWTLTELLALEPGVAYQHAFLYIRQLAIHLRNAMTTRKKETYQSVYNWQYVHCLFLWCRVLSTAGPSEALQPLVYPLAQVIIGCIKLIPTARFYPLRMHCIRALTLLSGSSGAFIPVLPFILEMFQQVDFNRKPGRMSSKPINFSVILKLSNVNLQEKAYRDGLVEQLYDLTLEYLHSQAHCIGFPELVLPVVLQLKSFLRECKVANYCRQVQQLLGKVQENSAYICSRRQRVSFGVSEQQAVEAWEKLTREEGTPLTLYYSHWRKLRDREIQLEISGKERLEDLNFPEIKRRKMADRKDEDRKQFKDLFDLNSSEEDDTEGFSERGILRPLSTRHGVEDDEEDEEEGEEDSSNSEDGDPDAEAGLAPGELQQLAQGPEDELEDLQLSEDD*
> 
> #--------------------------------------------------------------------
> # Step 2: Replace mutated AA and extract sm chain for prediction
> # includes replacing * with X for stop codon
> #--------------------------------------------------------------------
> 
> som_mut9 = som_mut9r = som_mut15 = som_mut15r = rep("", nrow(hugo_mutdata3_refaa))
> 
> for(i in 1:nrow(hugo_mutdata3_refaa)){
+   b = hugo_mutdata3_refaa[i,]
+   
+   if(b$prot.seq == ""){ 
+     som_mut9[i]  = som_mut9r[i]  = "ENST not found"
+     som_mut15[i] = som_mut15r[i] = "ENST not found"
+   } else if (b$prot.seq=="Sequence unavailable"){
+     som_mut9[i]  = som_mut9r[i]  = "Sequence unavailable"
+     som_mut15[i] = som_mut15r[i] = "Sequence unavailable"
+   } else{
+     b$prot.seq = as.character(b$prot.seq)
+     # replace * with X 
+     b$prot.seq = gsub("\\*", "X", b$prot.seq)
+     
+     # replace aa at position 'pos' with mutated aa 'M'
+     b$prot.seq.ref = b$prot.seq
+     substr(b$prot.seq, as.numeric(b$pos), as.numeric(b$pos)) <- as.character(b$M)
+     
+     # extract aa of interest per somatic mutation
+     # for 9 sliding window 
+     som_mut9[i]  = substr(b$prot.seq, max(as.numeric(b$pos)-8, 1), 
+                       min(as.numeric(b$pos)+8, nchar(b$prot.seq)))
+     
+     som_mut9r[i] = substr(b$prot.seq.ref, max(as.numeric(b$pos)-8, 1), 
+                       min(as.numeric(b$pos)+8, nchar(b$prot.seq.ref)))
+     
+     # for 15 sliding window - want 14 aa upstream of pos and 14 aa downstream of pos
+     som_mut15[i]  = substr(b$prot.seq, max(as.numeric(b$pos)-14, 1), 
+                        min(as.numeric(b$pos)+14, nchar(b$prot.seq)))
+     
+     som_mut15r[i] = substr(b$prot.seq.ref, max(as.numeric(b$pos)-14, 1), 
+                        min(as.numeric(b$pos)+14, nchar(b$prot.seq.ref)))
+   }
+ }
> 
> hugo_mutdata3_sm = data.frame(hugo_mutdata3_refaa[,1:15], som_mut9, som_mut9r, 
+                          som_mut15, som_mut15r, stringsAsFactors=FALSE)
> dim(hugo_mutdata3_sm)
[1] 34475    19
> hugo_mutdata3_sm[1:2,]
   id seqnames   start     end REF ALT tumor_name normal_name W pos M Wseq
1 Pt1     chr1  957229  957229   C   A SRR3083837  SRR3083838 R  75 L    G
2 Pt1     chr1 2175307 2175307   G   A SRR3083837  SRR3083838 W 340 X    G
  seqpos Mseq      EnsembleID          som_mut9         som_mut9r
1    224    T ENST00000327044 SEHKDQLSLLKDRDPEF SEHKDQLSRLKDRDPEF
2   1020    A ENST00000400921 HAFFRSIDXDLLEKKQA HAFFRSIDWDLLEKKQA
                      som_mut15                    som_mut15r
1 RRKGRASEHKDQLSLLKDRDPEFYKFLQE RRKGRASEHKDQLSRLKDRDPEFYKFLQE
2 FSDIKSHAFFRSIDXDLLEKKQALPPFQP FSDIKSHAFFRSIDWDLLEKKQALPPFQP
> 
> save(hugo_mutdata3_sm, file = "hugo_mutdata3_sm.RData")
> 
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_3.6.1
> q(save="no")
> proc.time()
   user  system elapsed 
 10.370   0.154  10.702 
